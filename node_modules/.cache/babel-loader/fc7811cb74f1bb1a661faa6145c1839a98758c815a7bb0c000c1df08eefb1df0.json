{"ast":null,"code":"var _jsxFileName = \"/home/archie/simulation_ws/src/web_interfaces/react-ros-robot/src/components/Teleoperation.jsx\";\nimport React, { Component } from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Teleopeation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.init_connection();\n  }\n  init_connection() {\n    this.state.ros = new ROSLIB.Ros();\n    console.log(\"Da khoi tao duoc ros\");\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection established!\");\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed\");\n      this.setState({\n        connected: false\n      });\n\n      // try to recconect every 3 seconds\n      setTimeout(() => {\n        try {\n          // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(\"connection problem\");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n      console.log(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"connection problem\");\n    }\n  }\n  handleMove() {\n    console.log(\"handle move\");\n  }\n  handleStop() {\n    console.log(\"handle stop\");\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Joystick, {\n        size: 100,\n        baseColor: \"#EEEEEE\",\n        stickColor: \"#BBBBBB\",\n        move: this.handleMove,\n        stop: this.handleStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Teleopeation;","map":{"version":3,"names":["React","Component","Joystick","jsxDEV","_jsxDEV","Teleopeation","constructor","state","ros","init_connection","ROSLIB","Ros","console","log","on","setState","connected","setTimeout","connect","Config","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","handleMove","handleStop","render","children","size","baseColor","stickColor","move","stop","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/archie/simulation_ws/src/web_interfaces/react-ros-robot/src/components/Teleoperation.jsx"],"sourcesContent":["import React, {Component} from \"react\";\nimport { Joystick } from \"react-joystick-component\";\n\nclass Teleopeation extends Component {\n    state = {ros:null};\n\n    constructor() {\n        super();\n        this.init_connection();\n    }\n\n    init_connection(){\n\n        this.state.ros = new ROSLIB.Ros();\n        console.log(\"Da khoi tao duoc ros\");\n\n        this.state.ros.on(\"connection\", () => {\n            console.log(\"connection established!\");\n            this.setState({connected: true});\n        });\n\n        this.state.ros.on(\"close\", () => {\n            console.log(\"connection is closed\");\n            this.setState({connected: false});\n\n            // try to recconect every 3 seconds\n            setTimeout(() => {\n                try{\n                    // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n                    this.state.ros.connect(\n                        \"ws://\" + \n                        Config.ROSBRIDGE_SERVER_IP +\n                        \":\" + \n                        Config.ROSBRIDGE_SERVER_PORT +\n                        \"\"\n                    );\n                } catch (error) {\n                    console.log(\"connection problem\");\n                }                \n            }, Config.RECONNECTION_TIMER);\n        });\n\n        try{\n            // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n            this.state.ros.connect(\n                \"ws://\" + \n                Config.ROSBRIDGE_SERVER_IP +\n                \":\" + \n                Config.ROSBRIDGE_SERVER_PORT +\n                \"\"\n            );\n\n            console.log(\n                \"ws://\" + \n                Config.ROSBRIDGE_SERVER_IP +\n                \":\" + \n                Config.ROSBRIDGE_SERVER_PORT +\n                \"\"\n            );\n        } catch (error) {\n            console.log(\"connection problem\");\n        }\n\n    }\n    \n    handleMove() {\n        console.log(\"handle move\");\n    }\n    handleStop() {\n        console.log(\"handle stop\");\n    }\n\n    render() {\n        return(\n            <div>\n                <Joystick\n                    size={100}\n                    baseColor=\"#EEEEEE\"\n                    stickColor=\"#BBBBBB\"\n                    move={this.handleMove}\n                    stop={this.handleStop}\n                />\n            </div>\n        );\n    };\n}\n\nexport default Teleopeation;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAASC,QAAQ,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,SAASJ,SAAS,CAAC;EAGjCK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IAAC,KAHZC,KAAK,GAAG;MAACC,GAAG,EAAC;IAAI,CAAC;IAId,IAAI,CAACC,eAAe,CAAC,CAAC;EAC1B;EAEAA,eAAeA,CAAA,EAAE;IAEb,IAAI,CAACF,KAAK,CAACC,GAAG,GAAG,IAAIE,MAAM,CAACC,GAAG,CAAC,CAAC;IACjCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IAEnC,IAAI,CAACN,KAAK,CAACC,GAAG,CAACM,EAAE,CAAC,YAAY,EAAE,MAAM;MAClCF,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC,IAAI,CAACE,QAAQ,CAAC;QAACC,SAAS,EAAE;MAAI,CAAC,CAAC;IACpC,CAAC,CAAC;IAEF,IAAI,CAACT,KAAK,CAACC,GAAG,CAACM,EAAE,CAAC,OAAO,EAAE,MAAM;MAC7BF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnC,IAAI,CAACE,QAAQ,CAAC;QAACC,SAAS,EAAE;MAAK,CAAC,CAAC;;MAEjC;MACAC,UAAU,CAAC,MAAM;QACb,IAAG;UACC;UACA,IAAI,CAACV,KAAK,CAACC,GAAG,CAACU,OAAO,CAClB,OAAO,GACPC,MAAM,CAACC,mBAAmB,GAC1B,GAAG,GACHD,MAAM,CAACE,qBAAqB,GAC5B,EACJ,CAAC;QACL,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZV,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACrC;MACJ,CAAC,EAAEM,MAAM,CAACI,kBAAkB,CAAC;IACjC,CAAC,CAAC;IAEF,IAAG;MACC;MACA,IAAI,CAAChB,KAAK,CAACC,GAAG,CAACU,OAAO,CAClB,OAAO,GACPC,MAAM,CAACC,mBAAmB,GAC1B,GAAG,GACHD,MAAM,CAACE,qBAAqB,GAC5B,EACJ,CAAC;MAEDT,OAAO,CAACC,GAAG,CACP,OAAO,GACPM,MAAM,CAACC,mBAAmB,GAC1B,GAAG,GACHD,MAAM,CAACE,qBAAqB,GAC5B,EACJ,CAAC;IACL,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZV,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACrC;EAEJ;EAEAW,UAAUA,CAAA,EAAG;IACTZ,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC9B;EACAY,UAAUA,CAAA,EAAG;IACTb,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC9B;EAEAa,MAAMA,CAAA,EAAG;IACL,oBACItB,OAAA;MAAAuB,QAAA,eACIvB,OAAA,CAACF,QAAQ;QACL0B,IAAI,EAAE,GAAI;QACVC,SAAS,EAAC,SAAS;QACnBC,UAAU,EAAC,SAAS;QACpBC,IAAI,EAAE,IAAI,CAACP,UAAW;QACtBQ,IAAI,EAAE,IAAI,CAACP;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEd;AACJ;AAEA,eAAe/B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}