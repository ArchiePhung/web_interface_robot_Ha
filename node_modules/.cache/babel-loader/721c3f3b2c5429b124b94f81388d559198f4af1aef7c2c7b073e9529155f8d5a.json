{"ast":null,"code":"var _jsxFileName = \"/home/archie/simulation_ws/src/web_interfaces/web_interface_robot/src/components/Map.jsx\";\nimport React, { Component } from \"react\";\nimport Config from \"../scripts/config\";\n// import ROSLIB from \"roslib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Map extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.view_map = this.view_map.bind(this);\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n      console.log(\"connection problem\");\n    }\n  }\n  componentDidMount() {\n    this.init_connection();\n    this.view_map();\n  }\n  view_map() {\n    var viewer = new window.ROS2D.Viewer({\n      divID: \"nav_div\",\n      width: 640,\n      height: 480\n    });\n    var navClient = new window.NAV2D.OccupancyGridClientNav({\n      ros: this.state.ros,\n      rootObject: viewer.scene,\n      viewer: viewer,\n      severName: \"/move_base\",\n      withOrientation: true\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MAP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Map;","map":{"version":3,"names":["React","Component","Config","jsxDEV","_jsxDEV","Map","constructor","state","ros","view_map","bind","init_connection","window","ROSLIB","Ros","console","log","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","componentDidMount","viewer","ROS2D","Viewer","divID","width","height","navClient","NAV2D","OccupancyGridClientNav","rootObject","scene","severName","withOrientation","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/archie/simulation_ws/src/web_interfaces/web_interface_robot/src/components/Map.jsx"],"sourcesContent":["import React, {Component} from \"react\";\nimport Config from \"../scripts/config\";\n// import ROSLIB from \"roslib\";\n\nclass Map extends Component {\n    state = {\n        ros:null,\n    };\n\n    constructor (){\n        super();\n        this.view_map = this.view_map.bind(this);\n    }\n\n    init_connection(){\n\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n\n        try{\n            this.state.ros.connect(\n                \"ws://\" + \n                Config.ROSBRIDGE_SERVER_IP +\n                \":\" + \n                Config.ROSBRIDGE_SERVER_PORT +\n                \"\"\n            );\n        } catch (error) {\n            console.log(\n                \"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\"\n            );\n            console.log(\"connection problem\");\n        }\n\n    }\n    componentDidMount() {\n        this.init_connection();\n        this.view_map();\n    }\n\n    view_map(){\n        var viewer = new window.ROS2D.Viewer({\n            divID: \"nav_div\",\n            width: 640,\n            height: 480,\n        });\n\n        var navClient = new window.NAV2D.OccupancyGridClientNav({\n            ros: this.state.ros,\n            rootObject: viewer.scene,\n            viewer: viewer,\n            severName: \"/move_base\",\n            withOrientation: true,\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <h1>MAP</h1>\n                {/* <div id=\"nav_div\">Viewer</div> */}\n            </div>\n        );\n    }\n}\n\nexport default Map;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAKxBK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IAAC,KALZC,KAAK,GAAG;MACJC,GAAG,EAAC;IACR,CAAC;IAIG,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;EAC5C;EAEAC,eAAeA,CAAA,EAAE;IAEb,IAAI,CAACJ,KAAK,CAACC,GAAG,GAAG,IAAII,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC;IACxCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,KAAK,CAACC,GAAG,CAAC;IAE3B,IAAG;MACC,IAAI,CAACD,KAAK,CAACC,GAAG,CAACS,OAAO,CAClB,OAAO,GACPf,MAAM,CAACgB,mBAAmB,GAC1B,GAAG,GACHhB,MAAM,CAACiB,qBAAqB,GAC5B,EACJ,CAAC;IACL,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZL,OAAO,CAACC,GAAG,CACP,OAAO,GAAGd,MAAM,CAACgB,mBAAmB,GAAG,GAAG,GAAGhB,MAAM,CAACiB,qBAAqB,GAAG,EAChF,CAAC;MACDJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACrC;EAEJ;EACAK,iBAAiBA,CAAA,EAAG;IAChB,IAAI,CAACV,eAAe,CAAC,CAAC;IACtB,IAAI,CAACF,QAAQ,CAAC,CAAC;EACnB;EAEAA,QAAQA,CAAA,EAAE;IACN,IAAIa,MAAM,GAAG,IAAIV,MAAM,CAACW,KAAK,CAACC,MAAM,CAAC;MACjCC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACZ,CAAC,CAAC;IAEF,IAAIC,SAAS,GAAG,IAAIhB,MAAM,CAACiB,KAAK,CAACC,sBAAsB,CAAC;MACpDtB,GAAG,EAAE,IAAI,CAACD,KAAK,CAACC,GAAG;MACnBuB,UAAU,EAAET,MAAM,CAACU,KAAK;MACxBV,MAAM,EAAEA,MAAM;MACdW,SAAS,EAAE,YAAY;MACvBC,eAAe,EAAE;IACrB,CAAC,CAAC;EACN;EAEAC,MAAMA,CAAA,EAAG;IACL,oBACI/B,OAAA;MAAAgC,QAAA,eACIhC,OAAA;QAAAgC,QAAA,EAAI;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEX,CAAC;EAEd;AACJ;AAEA,eAAenC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}