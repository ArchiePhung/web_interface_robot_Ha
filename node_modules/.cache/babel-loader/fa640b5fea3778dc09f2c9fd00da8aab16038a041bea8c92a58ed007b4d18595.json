{"ast":null,"code":"var _jsxFileName = \"/home/archie/simulation_ws/src/web_interfaces/react-ros-robot/src/components/RobotState.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\nimport Config from \"../scripts/config\";\nimport ROSLIB from \"roslib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RobotState extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null,\n      x: 0.0,\n      y: 0.0,\n      orientation: 0.0,\n      linear_velocity: 0.0,\n      angular_velocity: 0.0\n    };\n    this.pose_subscriber = new ROSLIB.Topic({\n      ros: this.state.ros,\n      name: \"/turtle1/pos\",\n      messageType: \"turtlesim/Pose\"\n    });\n    this.init_connection();\n  }\n  init_connection() {\n    this.state.ros = new ROSLIB.Ros();\n    console.log(\"Da khoi tao duoc ros\");\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection established in Teleoperation!\");\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed in Teleoperation!\");\n      this.setState({\n        connected: false\n      });\n\n      // try to recconect every 3 seconds\n      setTimeout(() => {\n        try {\n          // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(\"connection problem\");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n      console.log(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"connection problem\");\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-4\",\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"x: \", this.state.x]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"y: \", this.state.y]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Orientation: \", this.state.orientation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mt-4\",\n            children: \"Velocities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Linear Vel: \", this.state.linear_velocity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-0\",\n            children: [\"Angular Vel: \", this.state.angular_velocity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default RobotState;","map":{"version":3,"names":["React","Component","Row","Col","Container","Button","Config","ROSLIB","jsxDEV","_jsxDEV","RobotState","constructor","state","ros","x","y","orientation","linear_velocity","angular_velocity","pose_subscriber","Topic","name","messageType","init_connection","Ros","console","log","on","setState","connected","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/archie/simulation_ws/src/web_interfaces/react-ros-robot/src/components/RobotState.jsx"],"sourcesContent":["import React, {Component} from \"react\";\nimport {Row, Col, Container, Button} from \"react-bootstrap\";\nimport Config from \"../scripts/config\";\nimport ROSLIB from \"roslib\";\n\nclass RobotState extends Component {\n    state = {\n        ros: null,\n        x: 0.0,\n        y: 0.0,\n        orientation: 0.0,\n        linear_velocity: 0.0,\n        angular_velocity: 0.0,\n\n    };\n\n    constructor() {\n        super();\n        this.init_connection();\n    }\n\n    init_connection(){\n\n        this.state.ros = new ROSLIB.Ros();\n        console.log(\"Da khoi tao duoc ros\");\n\n        this.state.ros.on(\"connection\", () => {\n            console.log(\"connection established in Teleoperation!\");\n            this.setState({connected: true});\n        });\n\n        this.state.ros.on(\"close\", () => {\n            console.log(\"connection is closed in Teleoperation!\");\n            this.setState({connected: false});\n\n            // try to recconect every 3 seconds\n            setTimeout(() => {\n                try{\n                    // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n                    this.state.ros.connect(\n                        \"ws://\" + \n                        Config.ROSBRIDGE_SERVER_IP +\n                        \":\" + \n                        Config.ROSBRIDGE_SERVER_PORT +\n                        \"\"\n                    );\n                } catch (error) {\n                    console.log(\"connection problem\");\n                }                \n            }, Config.RECONNECTION_TIMER);\n        });\n\n        try{\n            // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n            this.state.ros.connect(\n                \"ws://\" + \n                Config.ROSBRIDGE_SERVER_IP +\n                \":\" + \n                Config.ROSBRIDGE_SERVER_PORT +\n                \"\"\n            );\n\n            console.log(\n                \"ws://\" + \n                Config.ROSBRIDGE_SERVER_IP +\n                \":\" + \n                Config.ROSBRIDGE_SERVER_PORT +\n                \"\"\n            );\n        } catch (error) {\n            console.log(\"connection problem\");\n        }\n\n    }\n\n    pose_subscriber = new ROSLIB.Topic({\n        ros:this.state.ros,\n        name: \"/turtle1/pos\",\n        messageType: \"turtlesim/Pose\",\n    });\n    render() {\n        return(\n            <div>\n                <Row>\n                    <Col>\n                        <h4 className=\"mt-4\">Position</h4>\n                        <p className=\"mt-0\">x: {this.state.x}</p>\n                        <p className=\"mt-0\">y: {this.state.y}</p>\n                        <p className=\"mt-0\">Orientation: {this.state.orientation}</p>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col>\n                        <h4 className=\"mt-4\">Velocities</h4>\n                        <p className=\"mt-0\">Linear Vel: {this.state.linear_velocity}</p>\n                        <p className=\"mt-0\">Angular Vel: {this.state.angular_velocity}</p>\n                    </Col>\n                </Row>\n\n            </div>\n        );\n    }\n}\n\nexport default RobotState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}