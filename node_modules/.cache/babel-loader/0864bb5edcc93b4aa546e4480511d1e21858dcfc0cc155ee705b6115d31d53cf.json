{"ast":null,"code":"var _jsxFileName = \"/home/archie/simulation_ws/src/web_interfaces/react-ros-robot/src/components/Teleoperation.jsx\";\nimport React, { Component } from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport Config from \"../scripts/config\";\nimport ROSLIB from \"roslib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Teleopeation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ros: null\n    };\n  }\n  // constructor() {\n  //     super();\n  //     this.init_connection();\n  // }\n\n  // init_connection(){\n\n  //     this.state.ros = new ROSLIB.Ros();\n  //     console.log(\"Da khoi tao duoc ros\");\n\n  //     this.state.ros.on(\"connection\", () => {\n  //         console.log(\"connection established!\");\n  //         this.setState({connected: true});\n  //     });\n\n  //     this.state.ros.on(\"close\", () => {\n  //         console.log(\"connection is closed\");\n  //         this.setState({connected: false});\n\n  //         // try to recconect every 3 seconds\n  //         setTimeout(() => {\n  //             try{\n  //                 // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n  //                 this.state.ros.connect(\n  //                     \"ws://\" + \n  //                     Config.ROSBRIDGE_SERVER_IP +\n  //                     \":\" + \n  //                     Config.ROSBRIDGE_SERVER_PORT +\n  //                     \"\"\n  //                 );\n  //             } catch (error) {\n  //                 console.log(\"connection problem\");\n  //             }                \n  //         }, Config.RECONNECTION_TIMER);\n  //     });\n\n  //     try{\n  //         // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n  //         this.state.ros.connect(\n  //             \"ws://\" + \n  //             Config.ROSBRIDGE_SERVER_IP +\n  //             \":\" + \n  //             Config.ROSBRIDGE_SERVER_PORT +\n  //             \"\"\n  //         );\n\n  //         console.log(\n  //             \"ws://\" + \n  //             Config.ROSBRIDGE_SERVER_IP +\n  //             \":\" + \n  //             Config.ROSBRIDGE_SERVER_PORT +\n  //             \"\"\n  //         );\n  //     } catch (error) {\n  //         console.log(\"connection problem\");\n  //     }\n\n  // }\n\n  handleMove() {\n    console.log(\"handle move\");\n    var cmd_vel = new ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\"\n    });\n\n    // create new twist message\n    var twist = new ROSLIB.Message({\n      linear: {\n        x: 2,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: 0\n      }\n    });\n\n    // publish the message\n    cmd_vel.publish(twist);\n  }\n  handleStop() {\n    console.log(\"handle stop\");\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Joystick, {\n        size: 100,\n        baseColor: \"#EEEEEE\",\n        stickColor: \"#BBBBBB\",\n        move: this.handleMove,\n        stop: this.handleStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Teleopeation;","map":{"version":3,"names":["React","Component","Joystick","Config","ROSLIB","jsxDEV","_jsxDEV","Teleopeation","constructor","args","state","ros","handleMove","console","log","cmd_vel","Topic","name","CMD_VEL_TOPIC","messageType","twist","Message","linear","x","y","z","angular","publish","handleStop","render","children","size","baseColor","stickColor","move","stop","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/archie/simulation_ws/src/web_interfaces/react-ros-robot/src/components/Teleoperation.jsx"],"sourcesContent":["import React, {Component} from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport Config from \"../scripts/config\";\nimport ROSLIB from \"roslib\";\n\nclass Teleopeation extends Component {\n    state = {ros:null};\n\n    // constructor() {\n    //     super();\n    //     this.init_connection();\n    // }\n\n    // init_connection(){\n\n    //     this.state.ros = new ROSLIB.Ros();\n    //     console.log(\"Da khoi tao duoc ros\");\n\n    //     this.state.ros.on(\"connection\", () => {\n    //         console.log(\"connection established!\");\n    //         this.setState({connected: true});\n    //     });\n\n    //     this.state.ros.on(\"close\", () => {\n    //         console.log(\"connection is closed\");\n    //         this.setState({connected: false});\n\n    //         // try to recconect every 3 seconds\n    //         setTimeout(() => {\n    //             try{\n    //                 // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n    //                 this.state.ros.connect(\n    //                     \"ws://\" + \n    //                     Config.ROSBRIDGE_SERVER_IP +\n    //                     \":\" + \n    //                     Config.ROSBRIDGE_SERVER_PORT +\n    //                     \"\"\n    //                 );\n    //             } catch (error) {\n    //                 console.log(\"connection problem\");\n    //             }                \n    //         }, Config.RECONNECTION_TIMER);\n    //     });\n\n    //     try{\n    //         // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n    //         this.state.ros.connect(\n    //             \"ws://\" + \n    //             Config.ROSBRIDGE_SERVER_IP +\n    //             \":\" + \n    //             Config.ROSBRIDGE_SERVER_PORT +\n    //             \"\"\n    //         );\n\n    //         console.log(\n    //             \"ws://\" + \n    //             Config.ROSBRIDGE_SERVER_IP +\n    //             \":\" + \n    //             Config.ROSBRIDGE_SERVER_PORT +\n    //             \"\"\n    //         );\n    //     } catch (error) {\n    //         console.log(\"connection problem\");\n    //     }\n\n    // }\n\n    handleMove() {\n        console.log(\"handle move\");\n        \n        var cmd_vel = new ROSLIB.Topic({\n            ros:this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/Twist\",\n        });\n\n        // create new twist message\n        var twist = new ROSLIB.Message({\n            linear:{\n                x: 2,\n                y: 0,\n                z: 0,\n            },\n            angular:{\n                x: 0,\n                y: 0,\n                z: 0,\n            },\n        })\n\n        // publish the message\n        cmd_vel.publish(twist);\n    }\n    handleStop() {\n        console.log(\"handle stop\");\n    }\n\n    render() {\n        return(\n            <div>\n                <Joystick\n                    size={100}\n                    baseColor=\"#EEEEEE\"\n                    stickColor=\"#BBBBBB\"\n                    move={this.handleMove}\n                    stop={this.handleStop}\n                />\n            </div>\n        );\n    };\n}\n\nexport default Teleopeation;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,SAASN,SAAS,CAAC;EAAAO,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACjCC,KAAK,GAAG;MAACC,GAAG,EAAC;IAAI,CAAC;EAAA;EAElB;EACA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEAC,UAAUA,CAAA,EAAG;IACTC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAE1B,IAAIC,OAAO,GAAG,IAAIX,MAAM,CAACY,KAAK,CAAC;MAC3BL,GAAG,EAAC,IAAI,CAACD,KAAK,CAACC,GAAG;MAClBM,IAAI,EAAEd,MAAM,CAACe,aAAa;MAC1BC,WAAW,EAAE;IACjB,CAAC,CAAC;;IAEF;IACA,IAAIC,KAAK,GAAG,IAAIhB,MAAM,CAACiB,OAAO,CAAC;MAC3BC,MAAM,EAAC;QACHC,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE;MACP,CAAC;MACDC,OAAO,EAAC;QACJH,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE;MACP;IACJ,CAAC,CAAC;;IAEF;IACAV,OAAO,CAACY,OAAO,CAACP,KAAK,CAAC;EAC1B;EACAQ,UAAUA,CAAA,EAAG;IACTf,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC9B;EAEAe,MAAMA,CAAA,EAAG;IACL,oBACIvB,OAAA;MAAAwB,QAAA,eACIxB,OAAA,CAACJ,QAAQ;QACL6B,IAAI,EAAE,GAAI;QACVC,SAAS,EAAC,SAAS;QACnBC,UAAU,EAAC,SAAS;QACpBC,IAAI,EAAE,IAAI,CAACtB,UAAW;QACtBuB,IAAI,EAAE,IAAI,CAACP;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEd;AACJ;AAEA,eAAehC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}