{"ast":null,"code":"var _jsxFileName = \"/home/archie/simulation_ws/src/web_interfaces/react-ros-robot/src/components/Teleoperation.jsx\";\nimport React, { Component } from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport Config from \"../scripts/config\";\nimport ROSLIB from \"roslib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Teleopeation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.init_connection();\n    this.handleMove = this.handleMove.bind(this);\n  }\n  init_connection() {\n    this.state.ros = new ROSLIB.Ros();\n    console.log(\"Da khoi tao duoc ros\");\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection established in Teleoperation!\");\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed in Teleoperation!\");\n      this.setState({\n        connected: false\n      });\n\n      // try to recconect every 3 seconds\n      setTimeout(() => {\n        try {\n          // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(\"connection problem\");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n      console.log(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"connection problem\");\n    }\n  }\n  handleMove(event) {\n    console.log(\"handle move\");\n    var cmd_vel = new ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\"\n    });\n\n    // create new twist message\n    var twist = new ROSLIB.Message({\n      linear: {\n        x: event.y,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: -event.x\n      }\n    });\n\n    // publish the message\n    cmd_vel.publish(twist);\n  }\n  handleStop() {\n    console.log(\"handle stop\");\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Joystick, {\n        size: 100,\n        baseColor: \"#EEEEEE\",\n        stickColor: \"#BBBBBB\",\n        move: this.handleMove,\n        stop: this.handleStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Teleopeation;","map":{"version":3,"names":["React","Component","Joystick","Config","ROSLIB","jsxDEV","_jsxDEV","Teleopeation","constructor","state","ros","init_connection","handleMove","bind","Ros","console","log","on","setState","connected","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","event","cmd_vel","Topic","name","CMD_VEL_TOPIC","messageType","twist","Message","linear","x","y","z","angular","publish","handleStop","render","children","size","baseColor","stickColor","move","stop","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/archie/simulation_ws/src/web_interfaces/react-ros-robot/src/components/Teleoperation.jsx"],"sourcesContent":["import React, {Component} from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport Config from \"../scripts/config\";\nimport ROSLIB from \"roslib\";\n\nclass Teleopeation extends Component {\n    state = {ros:null};\n\n    constructor() {\n        super();\n        this.init_connection();\n        this.handleMove = this.handleMove.bind(this);\n    }\n\n    init_connection(){\n\n        this.state.ros = new ROSLIB.Ros();\n        console.log(\"Da khoi tao duoc ros\");\n\n        this.state.ros.on(\"connection\", () => {\n            console.log(\"connection established in Teleoperation!\");\n            this.setState({connected: true});\n        });\n\n        this.state.ros.on(\"close\", () => {\n            console.log(\"connection is closed in Teleoperation!\");\n            this.setState({connected: false});\n\n            // try to recconect every 3 seconds\n            setTimeout(() => {\n                try{\n                    // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n                    this.state.ros.connect(\n                        \"ws://\" + \n                        Config.ROSBRIDGE_SERVER_IP +\n                        \":\" + \n                        Config.ROSBRIDGE_SERVER_PORT +\n                        \"\"\n                    );\n                } catch (error) {\n                    console.log(\"connection problem\");\n                }                \n            }, Config.RECONNECTION_TIMER);\n        });\n\n        try{\n            // this.state.ros.connect(\"ws://192.168.1.45:9090\");\n            this.state.ros.connect(\n                \"ws://\" + \n                Config.ROSBRIDGE_SERVER_IP +\n                \":\" + \n                Config.ROSBRIDGE_SERVER_PORT +\n                \"\"\n            );\n\n            console.log(\n                \"ws://\" + \n                Config.ROSBRIDGE_SERVER_IP +\n                \":\" + \n                Config.ROSBRIDGE_SERVER_PORT +\n                \"\"\n            );\n        } catch (error) {\n            console.log(\"connection problem\");\n        }\n\n    }\n\n    handleMove(event) {\n        console.log(\"handle move\");\n        \n        var cmd_vel = new ROSLIB.Topic({\n            ros:this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/Twist\",\n        });\n\n        // create new twist message\n        var twist = new ROSLIB.Message({\n            linear:{\n                x: event.y,\n                y: 0,\n                z: 0,\n            },\n            angular:{\n                x: 0,\n                y: 0,\n                z: -event.x,\n            },\n        })\n\n        // publish the message\n        cmd_vel.publish(twist);\n    }\n    handleStop() {\n        console.log(\"handle stop\");\n    }\n\n    render() {\n        return(\n            <div>\n                <Joystick\n                    size={100}\n                    baseColor=\"#EEEEEE\"\n                    stickColor=\"#BBBBBB\"\n                    move={this.handleMove}\n                    stop={this.handleStop}\n                />\n            </div>\n        );\n    };\n}\n\nexport default Teleopeation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}